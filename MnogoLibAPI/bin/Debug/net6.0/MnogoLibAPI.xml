<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MnogoLibAPI</name>
    </assembly>
    <members>
        <member name="M:BackendApi.Controllers.AuthorController.GetAll">
            <summary>
            Получение информации о всех авторах
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.AuthorController.GetById(System.Int32)">
            <summary>
            Получение информации о авторе по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.AuthorController.Add(MnogoLibAPI.Contracts.Author.CreateAuthorRequest)">
             <summary>
             Создание нового автора
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                   "nameAuthor": "string"
                 }
            
             </remarks>
             <param name="author">Автор</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.AuthorController.Update(MnogoLibAPI.Contracts.Author.GetAuthorRequest)">
             <summary>
             Изменение информации о авторе
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idAuthor": 0,
                   "nameAuthor": "string"
                 }
            
             </remarks>
             <param name="author">Автор</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.AuthorController.Delete(System.Int32)">
            <summary>
            Удаление автора
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.GetAll">
            <summary>
            Получение информации о всех чатах
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:BackendApi.Controllers.ChatController.GetById(System.Int32)">
            <summary>
            Получение информации о чате по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.Add(MnogoLibAPI.Contracts.Chat.CreateChatRequest)">
             <summary>
             Создание нового чата
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "idChat": 0,
                    "idOwner": 0,
                    "nameChat": "string"
                 }
            
             </remarks>
             <param name="chatService">Автор</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.Update(MnogoLibAPI.Contracts.Chat.GetChatRequest)">
             <summary>
             Изменение информации о чате
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "idChat": 0,
                     "idOwner": 0,
                     "nameChat": "string",
                     "createdTime": "2024-09-19T14:34:41.968Z",
                     "lastUpdateBy": 0,
                     "lastUpdateTime": "2024-09-19T14:34:41.969Z",
                     "deletedBy": 0,
                     "deletedTime": "2024-09-19T14:34:41.969Z"
                 }
            
             </remarks>
             <param name="authorStatus">Автор</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.ChatController.Delete(System.Int32)">
            <summary>
            Удаление чата
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.ChatUserController.GetAll">
            <summary>
            Получение информации о всех пользователях чатов
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:BackendApi.Controllers.ChatUserController.GetById(System.Int32,System.Int32)">
            <summary>
            Получение информации о пользователях в чате по id
            </summary>
            <param name="idChat">IDChat</param>
            <param name="idUser">IDUser</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.ChatUserController.Add(MnogoLibAPI.Contracts.ChatUser.CreateChatUserRequest)">
             <summary>
             Добовление нового пользователя в чат
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "idUser": 0,
                    "idChat": 0
                 }
            
             </remarks>
             <param name="chatUser">Пользователь чата</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.ChatUserController.Update(MnogoLibAPI.Contracts.ChatUser.GetChatUserRequest)">
             <summary>
             Изменение информации о пользователе чата
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                     "idUser": 0,
                     "idChat": 0,
                     "createdBy": 0,
                     "createdTime": "2024-09-19T14:50:41.116Z",
                     "deletedBy": 0,
                     "deletedTime": "2024-09-19T14:50:41.116Z",
                 }
            
             </remarks>
             <param name="chatUser">Пользователь чата</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.ChatUserController.Delete(System.Int32,System.Int32)">
            <summary>
            Удаление пользователя чата
            </summary>
            <param name="idChat">IDChat</param>
            <param name="idUser">IDUser</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.CommentController.GetAll">
            <summary>
            Получение информации о всех комментариях
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.CommentController.GetById(System.Int32)">
            <summary>
            Получение информации о комментарии по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.CommentController.Add(MnogoLibAPI.Contracts.Comment.CreateCommentRequest)">
             <summary>
             Создание нового комментария
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                     "textComment": "string",
                     "idUser": 0
                 }
            
             </remarks>
             <param name="comment">Комментарий</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.CommentController.Update(MnogoLibAPI.Contracts.Comment.GetCommentRequest)">
             <summary>
             Изменение информации о комментарие
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idComment": 0,
                   "textComment": "string",
                   "idUser": 0,
                   "createdTime": "2024-09-19T15:04:44.267Z",
                   "lastUpdateTime": "2024-09-19T15:04:44.267Z",
                   "deletedTime": "2024-09-19T15:04:44.267Z",
                 }
            
             </remarks>
             <param name="comment">Комментарий</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.CommentController.Delete(System.Int32)">
            <summary>
            Удаление комментария    
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.CommentRateController.GetAll">
            <summary>
            Получение информации о всех оценках комментариев
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:BackendApi.Controllers.CommentRateController.GetById(System.Int32,System.Int32)">
            <summary>
            Получение информации об оценках комментариев по id
            </summary>
            <param name="idComment">IDChat</param>
            <param name="idUser">IDUser</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.CommentRateController.Add(MnogoLibAPI.Contracts.CommentRate.CreateCommentRateRequest)">
             <summary>
             Добовление новой оценки комментария
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "idUser": 0,
                    "idChat": 0,
                    "value": 0
                 }
            
             </remarks>
             <param name="commentRate">Пользователь чата</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.CommentRateController.Update(MnogoLibAPI.Contracts.CommentRate.GetCommentRateRequest)">
             <summary>
             Изменение информации о пользователе чата
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idUser": 0,
                   "idComment": 0,
                   "value": 0,
                   "createdTime": "2024-09-19T15:18:41.474Z",
                   "lastUpdateTime": "2024-09-19T15:18:41.474Z",
                   "deletedTime": "2024-09-19T15:18:41.474Z"
                 }
            
             </remarks>
             <param name="commentRate">Оценка</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.CommentRateController.Delete(System.Int32,System.Int32)">
            <summary>
            Удаление оценки комментария
            </summary>
            <param name="idComment">IDChat</param>
            <param name="idUser">IDUser</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.FileController.GetAll">
            <summary>
            Получение информации о всех файлах
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.FileController.GetById(System.Int32)">
            <summary>
            Получение информации о файле по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.FileController.Add(MnogoLibAPI.Contracts.File.CreateFileRequest)">
             <summary>
             Создание нового файла
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                  "nameFile": "string",
                  "pathFile": "string",
                  "createdBy": 0
                 }
            
             </remarks>
             <param name="file">Файл</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.FileController.Update(MnogoLibAPI.Contracts.File.GetFileRequest)">
             <summary>
             Изменение информации о файле
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idFile": 0,
                   "nameFile": "string",
                   "pathFile": "string",
                   "createdBy": 0,
                   "createdTime": "2024-09-19T15:27:09.529Z",
                   "lastUpdateBy": 0,
                   "lastUpdateTime": "2024-09-19T15:27:09.529Z",
                   "deletedBy": 0,
                   "deletedTime": "2024-09-19T15:27:09.529Z"
                 }
            
             </remarks>
             <param name="file">Файл</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.FileController.Delete(System.Int32)">
            <summary>
            Удаление файла
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.GroupMaterialController.GetAll">
            <summary>
            Получение информации о всех группах
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.GroupMaterialController.GetById(System.Int32)">
            <summary>
            Получение информации о группе по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.GroupMaterialController.Add(MnogoLibAPI.Contracts.GroupMaterial.CreateGroupMaterialRequest)">
             <summary>
             Создание новой группы
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                   "nameGroup": "string",
                   "descriptionGroup": "string"
                 }
            
             </remarks>
             <param name="group">Группа</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.GroupMaterialController.Update(MnogoLibAPI.Contracts.GroupMaterial.GetGroupMaterialRequest)">
             <summary>
             Изменение информации о пользователе
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idGroup": 0,
                   "nameGroup": "string",
                   "descriptionGroup": "string"
                 }
            
             </remarks>
             <param name="group">Группа</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.GroupMaterialController.Delete(System.Int32)">
            <summary>
            Удаление пользователя
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialController.GetAll">
            <summary>
            Получение информации о всех материалах
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialController.GetById(System.Int32)">
            <summary>
            Получение информации о материале по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialController.Add(MnogoLibAPI.Contracts.Material.CreateMaterialRequest)">
             <summary>
             Создание нового материале
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                   "nameMaterial": "string",
                   "descriptionMaterial": "string",
                   "idCategory": 0,
                   "idAuthorStatus": 0,
                   "idAuthor": 0,
                   "createdBy": 0,
                   "fileIcon": 0
                 }
            
             </remarks>
             <param name="material">Материал</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialController.Update(MnogoLibAPI.Contracts.Material.GetMaterialRequest)">
             <summary>
             Изменение информации о материале
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idMaterial": 0,
                   "nameMaterial": "string",
                   "descriptionMaterial": "string",
                   "idCategory": 0,
                   "idAuthorStatus": 0,
                   "idAuthor": 0,
                   "createdBy": 0,
                   "createdTime": "2024-09-21T12:18:21.215Z",
                   "lastUpdateBy": 0,
                   "lastUpdateTime": "2024-09-21T12:18:21.215Z",
                   "deletedBy": 0,
                   "deletedTime": "2024-09-21T12:18:21.215Z",
                   "fileIcon": 0
                 }
            
             </remarks>
             <param name="material">Материал</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialController.Delete(System.Int32)">
            <summary>
            Удаление материала
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialFileController.GetAll">
            <summary>
            Получение информации о всех файлах материлов
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:BackendApi.Controllers.MaterialFileController.GetById(System.Int32,System.Int32)">
            <summary>
            Получение информации об файлах материала по id
            </summary>
            <param name="idMaterial">IDMaterial</param>
            <param name="idFile">IDFile</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialFileController.Add(MnogoLibAPI.Contracts.MaterialFile.CreateMaterialFileRequest)">
             <summary>
             Добовление нового файла материалу
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                   "idMaterial": 0,
                   "idFile": 0,
                   "volume": 0,
                   "chapter": 0,
                   "frameNumber": 0
                 }
            
             </remarks>
             <param name="material">Файл материала</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialFileController.Update(MnogoLibAPI.Contracts.MaterialFile.GetMaterialFileRequest)">
             <summary>
             Изменение информации о файлах материала
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idMaterial": 0,
                   "idFile": 0,
                   "volume": 0,
                   "chapter": 0,
                   "frameNumber": 0
                 }
            
             </remarks>
             <param name="material">Файл материала</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialFileController.Delete(System.Int32,System.Int32)">
            <summary>
            Удаление файла материала
            </summary>
            <param name="idMaterial">IDChat</param>
            <param name="idFile">IDUser</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialsUserStatusController.GetAll">
            <summary>
            Получение информации о всех пользователских статусах материлов
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:BackendApi.Controllers.MaterialsUserStatusController.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            Получение информации об пользовательских статусах материала по id
            </summary>
            <param name="idMaterial">IDMaterial</param>
            <param name="idUser">IDUser</param>
            <param name="idUserStatus">IDUserStatus</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialsUserStatusController.Add(MnogoLibAPI.Contracts.MaterialUserStatus.CreateMaterialUserStatusRequest)">
             <summary>
             Добовление нового пользовательского статуса материала
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                   "idMaterial": 0,
                   "idUser": 0,
                   "idUserStatus": 0
                 }
            
             </remarks>
             <param name="materialsUserStatusService">Пользовательский статус</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialsUserStatusController.Update(MnogoLibAPI.Contracts.MaterialUserStatus.GetMaterialUserStatusRequest)">
             <summary>
             Изменение информации о пользовательском статусе материала
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idMaterial": 0,
                   "idUser": 0,
                   "idUserStatus": 0,
                   "createdTime": "2024-09-20T17:46:52.710Z",
                   "lastUpdateTime": "2024-09-20T17:46:52.710Z",
                   "deletedTime": "2024-09-20T17:46:52.710Z"
                 }
            
             </remarks>
             <param name="materialsUserStatusService">Пользовательский статус</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MaterialsUserStatusController.Delete(System.Int32,System.Int32,System.Int32)">
            <summary>
            Удаление файла материала
            </summary>
            <param name="idMaterial">IDMaterial</param>
            <param name="idUser">IDUser</param>
            <param name="idUserStatus">IDUserStatus</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MessageUserController.GetAll">
            <summary>
            Получение информации о всех сообщениях
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MessageUserController.GetById(System.Int32)">
            <summary>
            Получение информации о сообщении по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MessageUserController.Add(MnogoLibAPI.Contracts.MessageUser.CreateMessageUserRequest)">
             <summary>
             Создание нового сообщения
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                   "idUser": 0,
                   "idChat": 0,
                   "idMessageStatus": 0,
                   "textMessage": "string"
                 }
            
             </remarks>
             <param name="message">Пользователь</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MessageUserController.Update(MnogoLibAPI.Contracts.MessageUser.GetMessageUserRequest)">
             <summary>
             Изменение информации о сообщении
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idMessage": 0,
                   "idUser": 0,
                   "idChat": 0,
                   "deliverDate": "2024-09-20T17:52:42.696Z",
                   "idMessageStatus": 0,
                   "textMessage": "string",
                   "createdTime": "2024-09-20T17:52:42.696Z",
                   "lastUpdateTime": "2024-09-20T17:52:42.696Z",
                   "deletedBy": 0,
                   "deletedTime": "2024-09-20T17:52:42.696Z",
                 }
            
             </remarks>
             <param name="message">Пользователь</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.MessageUserController.Delete(System.Int32)">
            <summary>
            Удаление сообщения
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.PaymentController.GetAll">
            <summary>
            Получение информации о всех картах
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.PaymentController.GetById(System.Int32)">
            <summary>
            Получение информации о карте по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.PaymentController.Add(MnogoLibAPI.Contracts.Payment.CreatePaymentRequest)">
             <summary>
             Создание новой карты
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                   "cardNumber": "string",
                   "cvv": "string",
                   "expressionDate": "2024-09-20T17:59:37.667Z"
                 }
            
             </remarks>
             <param name="payment">Карта</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.PaymentController.Update(MnogoLibAPI.Contracts.Payment.GetPaymentRequest)">
             <summary>
             Изменение информации о карте
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idPayment": 0,
                   "cardNumber": "string",
                   "cvv": "string",
                   "expressionDate": "2024-09-20T18:00:15.835Z"
                 }
            
             </remarks>
             <param name="payment">Карта</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.PaymentController.Delete(System.Int32)">
            <summary>
            Удаление карты
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.PaymentUserController.GetAll">
            <summary>
            Получение информации о всех пользователях чатов
            </summary>
            <returns></returns>
            
        </member>
        <member name="M:BackendApi.Controllers.PaymentUserController.GetById(System.Int32,System.Int32)">
            <summary>
            Получение информации о картах пользователя по id
            </summary>
            <param name="idPayment">IDPayment</param>
            <param name="idUser">IDUser</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.PaymentUserController.Add(MnogoLibAPI.Contracts.PaymentUser.CreatePaymentUserRequest)">
             <summary>
             Добовление новых карт пользователю
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                   "idPayment": 0,
                   "idUser": 0,
                   "isActive": true
                 }
            
             </remarks>
             <param name="paymentUser">Карты пользователя</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.PaymentUserController.Update(Domain.Models.PaymentUser)">
             <summary>
             Изменение информации о картах пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idPayment": 0,
                   "idUser": 0,
                   "isActive": true
                 }
            
             </remarks>
             <param name="paymentUser">Карты пользователя</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.PaymentUserController.Delete(System.Int32,System.Int32)">
            <summary>
            Удаление карт пользователя
            </summary>
            <param name="idPayment">IDPayment</param>
            <param name="idUser">IDUser</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.RateController.GetAll">
            <summary>
            Получение информации о всех оценках
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.RateController.GetById(System.Int32)">
            <summary>
            Получение информации об оценке по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.RateController.Add(MnogoLibAPI.Contracts.Rate.CreateRateRequest)">
             <summary>
             Создание новой оценки
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                   "idUser": 0,
                   "idMaterial": 0,
                   "valueRate": 0,
                 }
            
             </remarks>
             <param name="rate">Оценка</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.RateController.Update(MnogoLibAPI.Contracts.Rate.GetRateRequest)">
             <summary>
             Изменение информации об оценке
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idRate": 0,
                   "idUser": 0,
                   "idMaterial": 0,
                   "valueRate": 0,
                   "createdTime": "2024-09-20T18:20:33.320Z",
                   "lastUpdateTime": "2024-09-20T18:20:33.320Z",
                   "deletedTime": "2024-09-20T18:20:33.320Z"
                 }
            
             </remarks>
             <param name="rate">Оценка</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.RateController.Delete(System.Int32)">
            <summary>
            Удаление оценки
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.GetAll">
            <summary>
            Получение информации о всех пользователях
            </summary>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.GetById(System.Int32)">
            <summary>
            Получение информации о пользователе по id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.Add(MnogoLibAPI.Contracts.User.CreateUserRequest)">
             <summary>
             Создание нового пользователя
             </summary>
             <remarks>
             Пример запроса:
            
                 POST /Todo
                 {
                    "email" : "email@gmail.com"
                    "passwordUser" : "!Pa$$word123@",
                    "nicknameUser": "string",
                 }
            
             </remarks>
             <param name="user">Пользователь</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.Update(MnogoLibAPI.Contracts.User.GetUserRequest)">
             <summary>
             Изменение информации о пользователе
             </summary>
             <remarks>
             Пример запроса:
            
                 PUT /Todo
                 {
                   "idUser": 1,
                   "emailUser": "string",
                   "passwordUser": "string",
                   "nicknameUser": "string",
                   "idRole": 1,
                   "createdTime": "2024-09-19T14:05:14.947Z",
                   "lastUpdateBy": 1,
                   "lastUpdateTime": "2024-09-19T14:05:14.947Z",
                   "deletedBy": 1,
                   "deletedTime": "2024-09-19T14:05:14.947Z"
                 }
            
             </remarks>
             <param name="user">Пользователь</param>
             <returns></returns>
        </member>
        <member name="M:BackendApi.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Удаление пользователя
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
    </members>
</doc>
